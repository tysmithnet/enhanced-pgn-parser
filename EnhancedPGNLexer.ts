// Generated from EnhancedPGNLexer.g4 by ANTLR 4.6-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class EnhancedPGNLexer extends Lexer {
	public static readonly TAG_START = 1;
	public static readonly STRING = 2;
	public static readonly MOVE_TEXT_START = 3;
	public static readonly MOVE_TEXT_START_WITH_COMMENT = 4;
	public static readonly NEW_LINE = 5;
	public static readonly TAG_END = 6;
	public static readonly TAG_VALUE = 7;
	public static readonly TAG_KEY = 8;
	public static readonly TAG_SPACE = 9;
	public static readonly EOL_COMMENT_START = 10;
	public static readonly MOVE_NUM = 11;
	public static readonly BLOCK_COMMENT_START = 12;
	public static readonly WS = 13;
	public static readonly PIECE = 14;
	public static readonly LOCATION = 15;
	public static readonly PROMOTION = 16;
	public static readonly RANK = 17;
	public static readonly FILE = 18;
	public static readonly SHORT_CASTLE = 19;
	public static readonly LONG_CASTLE = 20;
	public static readonly CAPTURE_MARKER = 21;
	public static readonly ALTERNATE_LINE_START = 22;
	public static readonly ALTERNATE_LINE_END = 23;
	public static readonly BLUNDER = 24;
	public static readonly MISTAKE = 25;
	public static readonly DUBIOUS_MOVE = 26;
	public static readonly INTERESTING_MOVE = 27;
	public static readonly GOOD_MOVE = 28;
	public static readonly BRILLIANT_MOVE = 29;
	public static readonly CHECK = 30;
	public static readonly CHECKMATE = 31;
	public static readonly WHITE_WINS = 32;
	public static readonly BLACK_WINS = 33;
	public static readonly DRAW = 34;
	public static readonly UNKOWN_ENDING = 35;
	public static readonly NAG = 36;
	public static readonly EOL_COMMENT_TEXT = 37;
	public static readonly EOL_COMMENT_END = 38;
	public static readonly COMMAND_START = 39;
	public static readonly BLOCK_COMMENT_END = 40;
	public static readonly BLOCK_COMMENT_TEXT = 41;
	public static readonly COMMAND_ID = 42;
	public static readonly COMMAND_END = 43;
	public static readonly COMMA = 44;
	public static readonly PARAM_TEXT = 45;
	public static readonly TAG_PAIRS = 1;
	public static readonly MOVE_TEXT = 2;
	public static readonly EOL_COMMENT = 3;
	public static readonly BLOCK_COMMENT = 4;
	public static readonly COMMAND = 5;
	public static readonly COMMAND_PARAMS = 6;
	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE", "TAG_PAIRS", "MOVE_TEXT", "EOL_COMMENT", "BLOCK_COMMENT", 
		"COMMAND", "COMMAND_PARAMS",
	];

	public static readonly ruleNames: string[] = [
		"TAG_START", "STRING", "MOVE_TEXT_START", "MOVE_TEXT_START_WITH_COMMENT", 
		"NEW_LINE", "TAG_END", "TAG_VALUE", "TAG_KEY", "TAG_SPACE", "EOL_COMMENT_START", 
		"MOVE_NUM", "BLOCK_COMMENT_START", "WS", "PIECE", "LOCATION", "PROMOTION", 
		"RANK", "FILE", "SHORT_CASTLE", "LONG_CASTLE", "CAPTURE_MARKER", "ALTERNATE_LINE_START", 
		"ALTERNATE_LINE_END", "BLUNDER", "MISTAKE", "DUBIOUS_MOVE", "INTERESTING_MOVE", 
		"GOOD_MOVE", "BRILLIANT_MOVE", "CHECK", "CHECKMATE", "WHITE_WINS", "BLACK_WINS", 
		"DRAW", "UNKOWN_ENDING", "NAG", "EOL_COMMENT_TEXT", "EOL_COMMENT_END", 
		"COMMAND_START", "BLOCK_COMMENT_END", "BLOCK_COMMENT_TEXT", "COMMAND_ID", 
		"COMMAND_END", "COMMA", "PARAM_TEXT",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'['", undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, "' '", "';'", undefined, "'{'", undefined, undefined, 
		undefined, "'='", undefined, undefined, "'O-O'", "'O-O-O'", "'x'", "'('", 
		"')'", "'??'", "'?'", "'?!'", "'!?'", "'!'", "'!!'", "'+'", "'#'", "'1-0'", 
		"'0-1'", "'1/2-1/2'", "'*'", undefined, undefined, undefined, "'[%'", 
		"'}'", undefined, undefined, undefined, "','",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "TAG_START", "STRING", "MOVE_TEXT_START", "MOVE_TEXT_START_WITH_COMMENT", 
		"NEW_LINE", "TAG_END", "TAG_VALUE", "TAG_KEY", "TAG_SPACE", "EOL_COMMENT_START", 
		"MOVE_NUM", "BLOCK_COMMENT_START", "WS", "PIECE", "LOCATION", "PROMOTION", 
		"RANK", "FILE", "SHORT_CASTLE", "LONG_CASTLE", "CAPTURE_MARKER", "ALTERNATE_LINE_START", 
		"ALTERNATE_LINE_END", "BLUNDER", "MISTAKE", "DUBIOUS_MOVE", "INTERESTING_MOVE", 
		"GOOD_MOVE", "BRILLIANT_MOVE", "CHECK", "CHECKMATE", "WHITE_WINS", "BLACK_WINS", 
		"DRAW", "UNKOWN_ENDING", "NAG", "EOL_COMMENT_TEXT", "EOL_COMMENT_END", 
		"COMMAND_START", "BLOCK_COMMENT_END", "BLOCK_COMMENT_TEXT", "COMMAND_ID", 
		"COMMAND_END", "COMMA", "PARAM_TEXT",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(EnhancedPGNLexer._LITERAL_NAMES, EnhancedPGNLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return EnhancedPGNLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(EnhancedPGNLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "EnhancedPGNLexer.g4"; }

	// @Override
	public get ruleNames(): string[] { return EnhancedPGNLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return EnhancedPGNLexer._serializedATN; }

	// @Override
	public get modeNames(): string[] { return EnhancedPGNLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uAF6F\u8320\u479D\uB75C\u4880\u1605\u191C\uAB37\x02/\u0127\b\x01" +
		"\b\x01\b\x01\b\x01\b\x01\b\x01\b\x01\x04\x02\t\x02\x04\x03\t\x03\x04\x04" +
		"\t\x04\x04\x05\t\x05\x04\x06\t\x06\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04" +
		"\n\t\n\x04\v\t\v\x04\f\t\f\x04\r\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10" +
		"\t\x10\x04\x11\t\x11\x04\x12\t\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15" +
		"\t\x15\x04\x16\t\x16\x04\x17\t\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A" +
		"\t\x1A\x04\x1B\t\x1B\x04\x1C\t\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F" +
		"\t\x1F\x04 \t \x04!\t!\x04\"\t\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'" +
		"\t\'\x04(\t(\x04)\t)\x04*\t*\x04+\t+\x04,\t,\x04-\t-\x04.\t.\x03\x02\x03" +
		"\x02\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x07" +
		"\x03n\n\x03\f\x03\x0E\x03q\v\x03\x03\x03\x03\x03\x03\x04\x06\x04v\n\x04" +
		"\r\x04\x0E\x04w\x03\x04\x03\x04\x05\x04|\n\x04\x03\x04\x05\x04\x7F\n\x04" +
		"\x03\x04\x03\x04\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x06\x03\x06" +
		"\x03\x07\x03\x07\x03\x07\x03\x07\x03\b\x03\b\x03\t\x06\t\x91\n\t\r\t\x0E" +
		"\t\x92\x03\n\x03\n\x03\v\x03\v\x03\v\x03\v\x03\f\x06\f\x9C\n\f\r\f\x0E" +
		"\f\x9D\x03\f\x03\f\x05\f\xA2\n\f\x03\f\x05\f\xA5\n\f\x03\r\x03\r\x03\r" +
		"\x03\r\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x10\x03\x10" +
		"\x03\x10\x03\x11\x03\x11\x03\x12\x03\x12\x03\x13\x03\x13\x03\x14\x03\x14" +
		"\x03\x14\x03\x14\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03\x16" +
		"\x03\x16\x03\x17\x03\x17\x03\x18\x03\x18\x03\x19\x03\x19\x03\x19\x03\x1A" +
		"\x03\x1A\x03\x1B\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1C\x03\x1D\x03\x1D" +
		"\x03\x1E\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03 \x03 \x03!\x03!\x03!\x03" +
		"!\x03!\x03!\x03\"\x03\"\x03\"\x03\"\x03\"\x03\"\x03#\x03#\x03#\x03#\x03" +
		"#\x03#\x03#\x03#\x03#\x03#\x03$\x03$\x03$\x03$\x03%\x03%\x06%\xFA\n%\r" +
		"%\x0E%\xFB\x03&\x06&\xFF\n&\r&\x0E&\u0100\x03\'\x03\'\x03\'\x03\'\x03" +
		"(\x03(\x03(\x03(\x03(\x03)\x03)\x03)\x03)\x03*\x06*\u0111\n*\r*\x0E*\u0112" +
		"\x03+\x06+\u0116\n+\r+\x0E+\u0117\x03+\x03+\x03,\x03,\x03,\x03,\x03,\x03" +
		"-\x03-\x03.\x06.\u0124\n.\r.\x0E.\u0125\x02\x02\x02/\t\x02\x03\v\x02\x04" +
		"\r\x02\x05\x0F\x02\x06\x11\x02\x07\x13\x02\b\x15\x02\t\x17\x02\n\x19\x02" +
		"\v\x1B\x02\f\x1D\x02\r\x1F\x02\x0E!\x02\x0F#\x02\x10%\x02\x11\'\x02\x12" +
		")\x02\x13+\x02\x14-\x02\x15/\x02\x161\x02\x173\x02\x185\x02\x197\x02\x1A" +
		"9\x02\x1B;\x02\x1C=\x02\x1D?\x02\x1EA\x02\x1FC\x02 E\x02!G\x02\"I\x02" +
		"#K\x02$M\x02%O\x02&Q\x02\'S\x02(U\x02)W\x02*Y\x02+[\x02,]\x02-_\x02.a" +
		"\x02/\t\x02\x03\x04\x05\x06\x07\b\r\x04\x02$$^^\x03\x022;\x06\x022;C\\" +
		"aac|\x05\x02\f\f\x0F\x0F\"\"\x06\x02DDMMPPST\x03\x023:\x03\x02cj\x03\x02" +
		"\f\f\x04\x02]]\x7F\x7F\x05\x022;C\\c|\x04\x02..__\u012F\x02\t\x03\x02" +
		"\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02" +
		"\x02\x02\x11\x03\x02\x02\x02\x03\x13\x03\x02\x02\x02\x03\x15\x03\x02\x02" +
		"\x02\x03\x17\x03\x02\x02\x02\x03\x19\x03\x02\x02\x02\x04\x1B\x03\x02\x02" +
		"\x02\x04\x1D\x03\x02\x02\x02\x04\x1F\x03\x02\x02\x02\x04!\x03\x02\x02" +
		"\x02\x04#\x03\x02\x02\x02\x04%\x03\x02\x02\x02\x04\'\x03\x02\x02\x02\x04" +
		")\x03\x02\x02\x02\x04+\x03\x02\x02\x02\x04-\x03\x02\x02\x02\x04/\x03\x02" +
		"\x02\x02\x041\x03\x02\x02\x02\x043\x03\x02\x02\x02\x045\x03\x02\x02\x02" +
		"\x047\x03\x02\x02\x02\x049\x03\x02\x02\x02\x04;\x03\x02\x02\x02\x04=\x03" +
		"\x02\x02\x02\x04?\x03\x02\x02\x02\x04A\x03\x02\x02\x02\x04C\x03\x02\x02" +
		"\x02\x04E\x03\x02\x02\x02\x04G\x03\x02\x02\x02\x04I\x03\x02\x02\x02\x04" +
		"K\x03\x02\x02\x02\x04M\x03\x02\x02\x02\x04O\x03\x02\x02\x02\x05Q\x03\x02" +
		"\x02\x02\x05S\x03\x02\x02\x02\x06U\x03\x02\x02\x02\x06W\x03\x02\x02\x02" +
		"\x06Y\x03\x02\x02\x02\x07[\x03\x02\x02\x02\b]\x03\x02\x02\x02\b_\x03\x02" +
		"\x02\x02\ba\x03\x02\x02\x02\tc\x03\x02\x02\x02\vg\x03\x02\x02\x02\ru\x03" +
		"\x02\x02\x02\x0F\x82\x03\x02\x02\x02\x11\x87\x03\x02\x02\x02\x13\x89\x03" +
		"\x02\x02\x02\x15\x8D\x03\x02\x02\x02\x17\x90\x03\x02\x02\x02\x19\x94\x03" +
		"\x02\x02\x02\x1B\x96\x03\x02\x02\x02\x1D\x9B\x03\x02\x02\x02\x1F\xA6\x03" +
		"\x02\x02\x02!\xAA\x03\x02\x02\x02#\xAE\x03\x02\x02\x02%\xB0\x03\x02\x02" +
		"\x02\'\xB3\x03\x02\x02\x02)\xB5\x03\x02\x02\x02+\xB7\x03\x02\x02\x02-" +
		"\xB9\x03\x02\x02\x02/\xBD\x03\x02\x02\x021\xC3\x03\x02\x02\x023\xC5\x03" +
		"\x02\x02\x025\xC7\x03\x02\x02\x027\xC9\x03\x02\x02\x029\xCC\x03\x02\x02" +
		"\x02;\xCE\x03\x02\x02\x02=\xD1\x03\x02\x02\x02?\xD4\x03\x02\x02\x02A\xD6" +
		"\x03\x02\x02\x02C\xD9\x03\x02\x02\x02E\xDB\x03\x02\x02\x02G\xDD\x03\x02" +
		"\x02\x02I\xE3\x03\x02\x02\x02K\xE9\x03\x02\x02\x02M\xF3\x03\x02\x02\x02" +
		"O\xF7\x03\x02\x02\x02Q\xFE\x03\x02\x02\x02S\u0102\x03\x02\x02\x02U\u0106" +
		"\x03\x02\x02\x02W\u010B\x03\x02\x02\x02Y\u0110\x03\x02\x02\x02[\u0115" +
		"\x03\x02\x02\x02]\u011B\x03\x02\x02\x02_\u0120\x03\x02\x02\x02a\u0123" +
		"\x03\x02\x02\x02cd\x07]\x02\x02de\x03\x02\x02\x02ef\b\x02\x02\x02f\n\x03" +
		"\x02\x02\x02go\x07$\x02\x02hi\x07^\x02\x02in\x07^\x02\x02jk\x07^\x02\x02" +
		"kn\x07$\x02\x02ln\n\x02\x02\x02mh\x03\x02\x02\x02mj\x03\x02\x02\x02ml" +
		"\x03\x02\x02\x02nq\x03\x02\x02\x02om\x03\x02\x02\x02op\x03\x02\x02\x02" +
		"pr\x03\x02\x02\x02qo\x03\x02\x02\x02rs\x07$\x02\x02s\f\x03\x02\x02\x02" +
		"tv\t\x03\x02\x02ut\x03\x02\x02\x02vw\x03\x02\x02\x02wu\x03\x02\x02\x02" +
		"wx\x03\x02\x02\x02xy\x03\x02\x02\x02y{\x070\x02\x02z|\x070\x02\x02{z\x03" +
		"\x02\x02\x02{|\x03\x02\x02\x02|~\x03\x02\x02\x02}\x7F\x070\x02\x02~}\x03" +
		"\x02\x02\x02~\x7F\x03\x02\x02\x02\x7F\x80\x03\x02\x02\x02\x80\x81\b\x04" +
		"\x03\x02\x81\x0E\x03\x02\x02\x02\x82\x83\x07}\x02\x02\x83\x84\x03\x02" +
		"\x02\x02\x84\x85\b\x05\x03\x02\x85\x86\b\x05\x04\x02\x86\x10\x03\x02\x02" +
		"\x02\x87\x88\x07\f\x02\x02\x88\x12\x03\x02\x02\x02\x89\x8A\x07_\x02\x02" +
		"\x8A\x8B\x03\x02\x02\x02\x8B\x8C\b\x07\x05\x02\x8C\x14\x03\x02\x02\x02" +
		"\x8D\x8E\x05\v\x03\x02\x8E\x16\x03\x02\x02\x02\x8F\x91\t\x04\x02\x02\x90" +
		"\x8F\x03\x02\x02\x02\x91\x92\x03\x02\x02\x02\x92\x90\x03\x02\x02\x02\x92" +
		"\x93\x03\x02\x02\x02\x93\x18\x03\x02\x02\x02\x94\x95\x07\"\x02\x02\x95" +
		"\x1A\x03\x02\x02\x02\x96\x97\x07=\x02\x02\x97\x98\x03\x02\x02\x02\x98" +
		"\x99\b\v\x06\x02\x99\x1C\x03\x02\x02\x02\x9A\x9C\t\x03\x02\x02\x9B\x9A" +
		"\x03\x02\x02\x02\x9C\x9D\x03\x02\x02\x02\x9D\x9B\x03\x02\x02\x02\x9D\x9E" +
		"\x03\x02\x02\x02\x9E\x9F\x03\x02\x02\x02\x9F\xA1\x070\x02\x02\xA0\xA2" +
		"\x070\x02\x02\xA1\xA0\x03\x02\x02\x02\xA1\xA2\x03\x02\x02\x02\xA2\xA4" +
		"\x03\x02\x02\x02\xA3\xA5\x070\x02\x02\xA4\xA3\x03\x02\x02\x02\xA4\xA5" +
		"\x03\x02\x02\x02\xA5\x1E\x03\x02\x02\x02\xA6\xA7\x07}\x02\x02\xA7\xA8" +
		"\x03\x02\x02\x02\xA8\xA9\b\r\x04\x02\xA9 \x03\x02\x02\x02\xAA\xAB\t\x05" +
		"\x02\x02\xAB\xAC\x03\x02\x02\x02\xAC\xAD\b\x0E\x07\x02\xAD\"\x03\x02\x02" +
		"\x02\xAE\xAF\t\x06\x02\x02\xAF$\x03\x02\x02\x02\xB0\xB1\x05+\x13\x02\xB1" +
		"\xB2\x05)\x12\x02\xB2&\x03\x02\x02\x02\xB3\xB4\x07?\x02\x02\xB4(\x03\x02" +
		"\x02\x02\xB5\xB6\t\x07\x02\x02\xB6*\x03\x02\x02\x02\xB7\xB8\t\b\x02\x02" +
		"\xB8,\x03\x02\x02\x02\xB9\xBA\x07Q\x02\x02\xBA\xBB\x07/\x02\x02\xBB\xBC" +
		"\x07Q\x02\x02\xBC.\x03\x02\x02\x02\xBD\xBE\x07Q\x02\x02\xBE\xBF\x07/\x02" +
		"\x02\xBF\xC0\x07Q\x02\x02\xC0\xC1\x07/\x02\x02\xC1\xC2\x07Q\x02\x02\xC2" +
		"0\x03\x02\x02\x02\xC3\xC4\x07z\x02\x02\xC42\x03\x02\x02\x02\xC5\xC6\x07" +
		"*\x02\x02\xC64\x03\x02\x02\x02\xC7\xC8\x07+\x02\x02\xC86\x03\x02\x02\x02" +
		"\xC9\xCA\x07A\x02\x02\xCA\xCB\x07A\x02\x02\xCB8\x03\x02\x02\x02\xCC\xCD" +
		"\x07A\x02\x02\xCD:\x03\x02\x02\x02\xCE\xCF\x07A\x02\x02\xCF\xD0\x07#\x02" +
		"\x02\xD0<\x03\x02\x02\x02\xD1\xD2\x07#\x02\x02\xD2\xD3\x07A\x02\x02\xD3" +
		">\x03\x02\x02\x02\xD4\xD5\x07#\x02\x02\xD5@\x03\x02\x02\x02\xD6\xD7\x07" +
		"#\x02\x02\xD7\xD8\x07#\x02\x02\xD8B\x03\x02\x02\x02\xD9\xDA\x07-\x02\x02" +
		"\xDAD\x03\x02\x02\x02\xDB\xDC\x07%\x02\x02\xDCF\x03\x02\x02\x02\xDD\xDE" +
		"\x073\x02\x02\xDE\xDF\x07/\x02\x02\xDF\xE0\x072\x02\x02\xE0\xE1\x03\x02" +
		"\x02\x02\xE1\xE2\b!\x05\x02\xE2H\x03\x02\x02\x02\xE3\xE4\x072\x02\x02" +
		"\xE4\xE5\x07/\x02\x02\xE5\xE6\x073\x02\x02\xE6\xE7\x03\x02\x02\x02\xE7" +
		"\xE8\b\"\x05\x02\xE8J\x03\x02\x02\x02\xE9\xEA\x073\x02\x02\xEA\xEB\x07" +
		"1\x02\x02\xEB\xEC\x074\x02\x02\xEC\xED\x07/\x02\x02\xED\xEE\x073\x02\x02" +
		"\xEE\xEF\x071\x02\x02\xEF\xF0\x074\x02\x02\xF0\xF1\x03\x02\x02\x02\xF1" +
		"\xF2\b#\x05\x02\xF2L\x03\x02\x02\x02\xF3\xF4\x07,\x02\x02\xF4\xF5\x03" +
		"\x02\x02\x02\xF5\xF6\b$\x05\x02\xF6N\x03\x02\x02\x02\xF7\xF9\x07&\x02" +
		"\x02\xF8\xFA\t\x03\x02\x02\xF9\xF8\x03\x02\x02\x02\xFA\xFB\x03\x02\x02" +
		"\x02\xFB\xF9\x03\x02\x02\x02\xFB\xFC\x03\x02\x02\x02\xFCP\x03\x02\x02" +
		"\x02\xFD\xFF\n\t\x02\x02\xFE\xFD\x03\x02\x02\x02\xFF\u0100\x03\x02\x02" +
		"\x02\u0100\xFE\x03\x02\x02\x02\u0100\u0101\x03\x02\x02\x02\u0101R\x03" +
		"\x02\x02\x02\u0102\u0103\x07\f\x02\x02\u0103\u0104\x03\x02\x02\x02\u0104" +
		"\u0105\b\'\x05\x02\u0105T\x03\x02\x02\x02\u0106\u0107\x07]\x02\x02\u0107" +
		"\u0108\x07\'\x02\x02\u0108\u0109\x03\x02\x02\x02\u0109\u010A\b(\b\x02" +
		"\u010AV\x03\x02\x02\x02\u010B\u010C\x07\x7F\x02\x02\u010C\u010D\x03\x02" +
		"\x02\x02\u010D\u010E\b)\x05\x02\u010EX\x03\x02\x02\x02\u010F\u0111\n\n" +
		"\x02\x02\u0110\u010F\x03\x02\x02\x02\u0111\u0112\x03\x02\x02\x02\u0112" +
		"\u0110\x03\x02\x02\x02\u0112\u0113\x03\x02\x02\x02\u0113Z\x03\x02\x02" +
		"\x02\u0114\u0116\t\v\x02\x02\u0115\u0114\x03\x02\x02\x02\u0116\u0117\x03" +
		"\x02\x02\x02\u0117\u0115\x03\x02\x02\x02\u0117\u0118\x03\x02\x02\x02\u0118" +
		"\u0119\x03\x02\x02\x02\u0119\u011A\b+\t\x02\u011A\\\x03\x02\x02\x02\u011B" +
		"\u011C\x07_\x02\x02\u011C\u011D\x03\x02\x02\x02\u011D\u011E\b,\x05\x02" +
		"\u011E\u011F\b,\x05\x02\u011F^\x03\x02\x02\x02\u0120\u0121\x07.\x02\x02" +
		"\u0121`\x03\x02\x02\x02\u0122\u0124\n\f\x02\x02\u0123\u0122\x03\x02\x02" +
		"\x02\u0124\u0125\x03\x02\x02\x02\u0125\u0123\x03\x02\x02\x02\u0125\u0126" +
		"\x03\x02\x02\x02\u0126b\x03\x02\x02\x02\x17\x02\x03\x04\x05\x06\x07\b" +
		"mow{~\x92\x9D\xA1\xA4\xFB\u0100\u0112\u0117\u0125\n\x07\x03\x02\x07\x04" +
		"\x02\x07\x06\x02\x06\x02\x02\x07\x05\x02\b\x02\x02\x07\x07\x02\x07\b\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!EnhancedPGNLexer.__ATN) {
			EnhancedPGNLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(EnhancedPGNLexer._serializedATN));
		}

		return EnhancedPGNLexer.__ATN;
	}

}

